#include <check.h>

#include "s21_decimal.h"

#test s21_is_equal_test
#ifdef DECIMALIZATOR
int output = open("s21_is_equal.output", O_WRONLY | O_CREAT | O_TRUNC,
                  S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_equal.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_equal(a, b) == res);
#else
  int res = s21_is_equal(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);

#test s21_is_greater_test
#ifdef DECIMALIZATOR
int output = open("s21_is_greater.output", O_WRONLY | O_CREAT | O_TRUNC,
                  S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_greater.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_greater(a, b) == res);
#else
  int res = s21_is_greater(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);

// -----------------------------------------------------------------------

#test s21_is_less_test
#ifdef DECIMALIZATOR
int output = open("s21_is_less.output", O_WRONLY | O_CREAT | O_TRUNC,
                  S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_less.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_less(a, b) == res);
#else
  int res = s21_is_less(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);

#test s21_is_not_equal_test
#ifdef DECIMALIZATOR
int output = open("s21_is_not_equal.output", O_WRONLY | O_CREAT | O_TRUNC,
                  S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_not_equal.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_not_equal(a, b) == res);
#else
  int res = s21_is_not_equal(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);

#test s21_is_greater_or_equal_test
#ifdef DECIMALIZATOR
int output = open("s21_is_greater_or_equal.output",
                  O_WRONLY | O_CREAT | O_TRUNC, S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_greater_or_equal.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_greater_or_equal(a, b) == res);
#else
  int res = s21_is_greater_or_equal(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);

#test s21_is_less_or_equal_test
#ifdef DECIMALIZATOR
int output = open("s21_is_less_or_equal.output", O_WRONLY | O_CREAT | O_TRUNC,
                  S_IRWXG | S_IRWXU | S_IRWXO);
#endif
int fd = open("s21_is_less_or_equal.input", O_RDONLY);
s21_decimal a, b;
int res;

while (s21_decimal_deserialize(&a, fd) && s21_decimal_deserialize(&b, fd) &&
       (read(fd, &res, sizeof(int)) > 0)) {
#ifndef DECIMALIZATOR
  ck_assert(s21_is_less_or_equal(a, b) == res);
#else
  int res = s21_is_less_or_equal(a, b);
  write(output, &res, sizeof(res));
#endif
}

close(fd);